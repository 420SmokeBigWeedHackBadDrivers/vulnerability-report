webchess v1.0 (https://sourceforge.net/projects/webchess) was discovered to contain a SQL injection vulnerability via the $playerID parameter at mainmenu.php.

390.	   if (is_numeric($_POST['txtReload']))
391.	   {
392.	    if (intval($_POST['txtReload']) >= $CFG_MINAUTORELOAD)
393.	     $tmpQuery = "UPDATE " . $CFG_TABLE[preferences] . " SET value = ".$_POST['txtReload']." WHERE playerID = ".$_SESSION['playerID']." AND preference = 'autoreload'";
394.	    else
395.	     $tmpQuery = "UPDATE " . $CFG_TABLE[preferences] . " SET value = ".$CFG_MINAUTORELOAD." WHERE playerID = ".$_SESSION['playerID']." AND preference = 'autoreload'";
396.	
397.	    mysql_query($tmpQuery);
398.	   }

In lines 393 and 395 of the code, the value of $_SESSION['playerID'] is passed directly into the SQL statement, and these two SQL statements are identical. 
The if condition determines that a different value is passed in to modify the operation. 
Since there is no filtering or validation done on $_SESSION['playerID'], this can lead to data loss issues. 
For example, if a user passes in a value of 1 via POST and saves 1 or 1=1 # into the session, the SQL statement executed would be UPDATE preferences SET value = 1 WHERE playerID = 1 or 1=1 # AND preference = 'autoreload'. 
This will change all value values in the preferences table to 1.
This vulnerability also poses a risk of database shutdown. 
If a user saves 1; system shutdown;# into a session, the executed SQL statement will be UPDATE preferences SET value = 1 WHERE playerID = 1; system shutdown;# AND preference = 'autoreload'. 
This will cause the database to shut down after the update statement is executed.
