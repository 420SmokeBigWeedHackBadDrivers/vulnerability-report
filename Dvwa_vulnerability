DVWA v1.0 (https://github.com/digininja/DVWA) was discovered to contain a SQL injection vulnerability via the id parameter at blind\source\high.php.

5.	 $id = $_COOKIE[ 'id' ];
6.	
7.	 // Check database
8.	 $getid  = "SELECT first_name, last_name FROM users WHERE user_id = '$id' LIMIT 1;";
9.	 $result = mysqli_query($GLOBALS["___mysqli_ston"],  $getid ); // Removed 


When a user puts malicious input into a cookie, the variable $id receives the value of $_COOKIE[ 'id' ] 
and is passed directly into the $query, risking data loss and unauthorized access. For example, if an 
attacker stores admin' or 1=1 # in the session, once the above code is triggered, the resulting 
SQL statement is SELECT first_name, last_name FROM users WHERE user_id = 'admin' or 1=1 #' LIMIT 1, 
with # as the comment character. which # acts as a comment character, resulting in the subsequent 
statements not being executed, and "or 1=1" being a constant truth condition, which in turn 
results in the data in the users table being compromised. In addition, if the attacker 
deposits admin' and 1=1 # into the session, the executed SQL statement becomes 
SELECT first_name, last_name FROM users WHERE user_id = 'admin' and 1=1 #' LIMIT 1. 
In this case, the attacker can log in to the admin user without entering the password. 
In this case, the attacker does not need to enter the password of the admin user to log in, 
thus gaining full access to the admin account, which is extremely dangerous.
